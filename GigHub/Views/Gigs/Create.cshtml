<!--using viewmodel instead of model
    all the properties must be in the GigFormViewModel what we use here-->
@model GigHub.ViewModels.GigFormViewModel
@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml ";
}

<h2>Add a Gig</h2>
<!-- Targeting: create action from gigs controller-->
@using (Html.BeginForm("Create", "Gigs"))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(m => m.Venue)
        @Html.TextBoxFor(m => m.Venue, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Venue)
    </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Date)
            @Html.TextBoxFor(m => m.Date, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Date)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Time)
            @Html.TextBoxFor(m => m.Time, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Time)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Genre)
            <!--first argument for list the property Genre, the second argument is the source of the dropdown list, the options we gonna put there-->
            @Html.DropDownListFor(m => m.Genre, new SelectList(Model.Genres, "Id", "Name"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Genre)
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
}


@section scripts
{   
    
    @Scripts.Render("~/bundles/jqueryval")
}
